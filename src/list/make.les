
;	ISC License (ISC)
;
;	Copyright 2017 Adam Armstrong
;
;	Permission to use, copy, modify, and/or distribute this software for any
;	purpose with or without fee is hereby granted, provided that the above copyright
;	notice and this permission notice appear in all copies.
;
;	THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
;	REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND
;	FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
;	INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
;	LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
;	OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
;	PERFORMANCE OF THIS SOFTWARE.

;	(list . x)
;	Applicative - does not capture the current environment.
;
;	Summary: Used to make lists.
;
;	Returns: The operand tree passed to it.
;
;	Parameters:
;	x	The value to return.
;
;	Details:
;		.
($define list ($seal applicative
	($closure _ (_ . x) x)))

;	(cons head tail)
;	Applicative - does not capture the current environment.
;
;	Summary: Makes a pair.
;
;	Returns: A pair with a car of head and a cdr of tail.
;
;	Parameters:
;	head	The value to put in the car position of the new pair.
;	tail	The value to put in the cdr position of the new pair.
;
;	Details:
;		(list head . tail)
($define cons ($seal applicative
	($closure _ (_ . x)
		($if (pair? x)
			($let (head . x) x
				($if (pair? x)
					($let (tail . x) x
						($if (null? x)
							(list head . tail)
							(error)))
					(error)))
			(error)))))
